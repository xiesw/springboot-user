## 访问时默认的前缀（jsp 页面的相对地址）及后缀，例如访问 http://localhost:8080/login 真实地址会解析成 http://localhost:8080/WEB-INF/view/login.jsp
spring.mvc.view.prefix=/WEB-INF/view/
spring.mvc.view.suffix=.jsp

## Thymeleaf 配置
spring.thymeleaf.prefix=classpath:/templates
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.thymeleaf.servlet.content-type=text/html
spring.thymeleaf.cache=false
spring.thymeleaf.enabled=true

## 数据源配置，项目用的 MySQL 驱动是 8.0.15 版本
spring.datasource.url=jdbc:mysql://localhost:3306/springboot-user-demo?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver

## JPA 相关配置，是否注册 OpenEntityManagerInViewInterceptor，绑定 JPA EntityManager 到请求线程中，默认为: true，避免启动时 Warning 告警
spring.jpa.open-in-view=true

## MyBatis 配置
mybatis.typeAliasesPackage=com.gorge4j.user.entity
mybatis.mapperLocations=classpath:mapping/*.xml
# 除了Locback，下面这项配置也可以将 MyBatis 的执行 SQL 打印出来
# mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl

## 健康检查需要（注意 SpringBoot2.x 与之前的版本有较大差异）
# http://localhost:8080/actuator/health
## 加载所有的端点，也可以指定端点加载
# management.endpoints.web.exposure.include=*
## 如下配置默认不加载任何端点，仅加载健康检查的端点
management.endpoints.enabled-by-default=false
management.endpoint.health.enabled=true
management.server.port=8084

## Druid连接池配置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# 初始化大小、最小、最大
spring.datasource.initialSize=1
spring.datasource.minIdle=3
spring.datasource.maxActive=20
# 获取连接等待超时时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=30000
# 指定获取连接时连接校验的sql查询语句
spring.datasource.validationQuery=select 'x'
# 获取连接后，确实是否要进行连接空闲时间的检查
spring.datasource.testWhileIdle=true
# 获取连接检测
spring.datasource.testOnBorrow=false
# 归还连接检测
spring.datasource.testOnReturn=false
# 指定连接校验查询的超时时间
spring.datasource.validationQueryTimeout=600000
# 配置一个连接在池总最小生存的时间
spring.datasource.minEvictableIdleTimeMillis=300000
# 打开 PSCache，并且指定每个连接上 Cache 的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filter，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,slf4j
# 通过connectProperties属性来打开mergeSql功能，慢sql记录等
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.logSlowSql=true;druid.stat.slowSqlMillis=5000